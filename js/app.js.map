{"version":3,"sources":["scrollbox.js","script.js"],"names":[],"mappingslHA","file":"app.js","sourcesContent":["(function($) {\r\n    $.fn.scrollbox = function(config) {\r\n    //default config\r\n        var defConfig = {\r\n            linear: true,\r\n            direction: 'h',\r\n            step: 1,\r\n            delay: 0,\r\n            speed: 10,\r\n            onMouseOverPause: true,\r\n            startDelay: 0,\r\n            distance: 'auto',\r\n            switchItems: 1, // Items to switch after each scroll event\r\n            autoPlay: true,\r\n            queue: null,\r\n            listElement: 'ul',\r\n            listItemElement: 'li',\r\n            infiniteLoop: true, // Infinite loop or not loop\r\n        };\r\n        \r\n        config = $.extend(defConfig, config);\r\n        config.scrollOffset = config.direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\r\n        if (config.queue) {\r\n            config.queue = $('#' + config.queue);\r\n        }\r\n\r\n        return this.each(function() {\r\n            var container = $(this),\r\n                containerUL,\r\n                scrollingId = null,\r\n                nextScrollId = null,\r\n                paused = false,\r\n                forward,\r\n                scrollForward,\r\n                pauseHover,\r\n                switchCount = 0;\r\n\r\n            if (config.onMouseOverPause) {\r\n                container.bind('mouseover', function() {\r\n                    paused = true;\r\n                });\r\n                container.bind('mouseout', function() {\r\n                    paused = false;\r\n                });\r\n            }\r\n            containerUL = container.children(config.listElement + ':first-child');\r\n\r\n            // init default switchAmount\r\n            if (config.infiniteLoop === false && config.switchAmount === 0) {\r\n                config.switchAmount = containerUL.children().length;\r\n            }\r\n\r\n            scrollForward = function() {\r\n                if (paused) {\r\n                    return;\r\n                }\r\n                var curLi,\r\n                    i,\r\n                    newScrollOffset,\r\n                    scrollDistance,\r\n                    theStep;\r\n\r\n                curLi = containerUL.children(config.listItemElement + ':first-child');\r\n\r\n                scrollDistance = config.distance !== 'auto' ? config.distance :\r\n                config.direction === 'vertical' ? curLi.outerHeight(true) : curLi.outerWidth(true);\r\n\r\n                // offset\r\n                if (!config.linear) {\r\n                    theStep = Math.max(3, parseInt((scrollDistance - container[0][config.scrollOffset]) * 0.3, 10));\r\n                    newScrollOffset = Math.min(container[0][config.scrollOffset] + theStep, scrollDistance);\r\n                } else {\r\n                    newScrollOffset = Math.min(container[0][config.scrollOffset] + config.step, scrollDistance);\r\n                }\r\n                container[0][config.scrollOffset] = newScrollOffset;\r\n\r\n                if (newScrollOffset >= scrollDistance) {\r\n                    for (i = 0; i < config.switchItems; i++) {\r\n                        if (config.queue && config.queue.find(config.listItemElement).length > 0) {\r\n                            containerUL.append(config.queue.find(config.listItemElement)[0]);\r\n                            containerUL.children(config.listItemElement + ':first-child').remove();\r\n                        } else {\r\n                            containerUL.append(containerUL.children(config.listItemElement + ':first-child'));\r\n                        }\r\n                        ++switchCount;\r\n                    }\r\n                    container[0][config.scrollOffset] = 0;\r\n                    clearInterval(scrollingId);\r\n                    scrollingId = null;\r\n                    if (config.infiniteLoop === false && switchCount >= config.switchAmount) {\r\n                        return;\r\n                    }\r\n                    if (config.autoPlay) {\r\n                        nextScrollId = setTimeout(forward, config.delay * 1000);\r\n                    }\r\n                }\r\n            };\r\n\r\n            forward = function() {\r\n                clearInterval(scrollingId);\r\n                scrollingId = setInterval(scrollForward, config.speed);\r\n            };\r\n\r\n            // Implements mouseover function.\r\n\r\n            pauseHover = function() {\r\n                paused = true;\r\n            };\r\n\r\n            if (config.autoPlay) {\r\n                nextScrollId = setTimeout(forward, config.startDelay * 1000);\r\n            }\r\n        });\r\n    };\r\n}(jQuery));",""]}